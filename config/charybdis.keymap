#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"
#include "js_react_macros.dtsi"

/ {
    /* input config for mouse move mode */
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1 2 3 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <4>;
        scale-divisor = <5>;
        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */
    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <6>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    /* input config for mouse scroll mode */
    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */
    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */
    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };
// ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    00     01     02     03    04      05        06     07     08     09     10     11
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    12     13     14     15    16      17        18     19     20     21     22     23
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    24     25     26     27    28      29        30     31     32     33     34     35
// ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
//                         36     37     38        39     40
//                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
// #define BASE    0
// #define NUM     1
// #define SYM     2
// #define REACT   3
// #define SYSTEM  4
// #define MOUSE   5
// #define SLOW    6
// #define SCROLL  7
// #define EMPTY   8
// #define EMPTY2  9

    keymap {
        compatible = "zmk,keymap";
        BASE {
            bindings = <
// ╭────────────────┬──────────────┬─────────────────────────────┬──────────────────────────────────┬──────────────────────┬────────╮  ╭────────────────┬─────────────────────────┬──────────────────────────────────────┬────────────────────────────────────┬────────────────────────┬──────────────╮
    &kp F12          &kp Q           &kp W                          &kp F                              &kp P                  &kp B       &kp J             &kp L                   &kp U                                   &kp Y                                &kp '                  &td_layers
// ├────────────────┼──────────────┼─────────────────────────────┼──────────────────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼──────────────────────────────────────┼────────────────────────────────────┼────────────────────────┼──────────────┤
    &hm_left LCMD TAB  &lt 2 A      &hm_left LEFT_ALT R            &hm_left LCTRL S                   &hm_left LEFT_SHIFT T  &kp G       &kp M             &hm_right RIGHT_SHIFT N  &hm_right RCTRL E                       &hm_right RIGHT_ALT I                &lt 2 O                &hm_right RCMD  DEL
// ├────────────────┼──────────────┼─────────────────────────────┼──────────────────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼──────────────────────────────────────┼────────────────────────────────────┼────────────────────────┼──────────────┤
    &kp C_AC_SEARCH    &kp Z        &kp X                          &kp C                              &kp D                  &kp V       &kp K             &kp H                   &kp COMMA                                &kp PERIOD                           &td_home               &clip_hist
// ╰────────────────┴──────────────┴─────────────────────────────┼──────────────────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼──────────────────────────────────────┴────────────────────────────────────┴────────────────────────┴──────────────╯
                                                                               &td_cursor    &mkp LCLK          &td_space                   &lt 7 RETURN      &td_bs
                                                                          // ╰─────────────┴──────────────────┴────────╯               ╰────────────────┴──────────────╯
            >;
        };

        NUM {
            bindings = <
&kp ESC       &kp HOME  &kp UP    &kp END    &kp PG_UP    &none            &jsx_tag   &hm F7 N7  &hm F8 N8  &hm F9 N9  &kp MINUS     &EQUAL
&kp TAB       &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN    &kp DEL          &arrow_fn  &hm F4 N4  &hm F5 N5  &hm F6 N6  &hm F11 LBKT  &RBKT
&kp LC(GRAVE) &kp LC(Z) &kp LC(X) &kp LC(C)  &kp LC(V)    &kp LC(Y)        &ternary   &hm F1 N1  &hm F2 N2  &hm F3 N3  &hm F12 BSLH  &PIPE
                                  &trans     &trans       &trans           &kp N0     &trans
            >;
        };

        SYM {
            bindings = <
&kp TILDE  &kp EXCL  &kp LBRC  &kp RBRC  &kp HASH   &kp DLLR        &kp ASTRK  &kp AMPS   &arrow_fn       &kp PRCNT   &kp GRAVE &kp EXCL
&none      &kp LT    &kp LPAR  &kp RPAR  &kp GT     &kp DQT         &kp MINUS  &kp COLON  &triple_equals  &not_equals &kp PLUS  &kp PIPE
&none      &kp BSLH  &kp LBKT  &kp RBKT  &kp QMARK  &kp SQT         &kp AT     &kp UNDER  &log_and        &log_or     &kp SEMI  &kp FSLH
                               &trans    &trans     &trans          &trans      &trans
            >;
        };

        REACT {
            bindings = <
&kp ESC     &use_state     &use_effect   &use_ref      &use_memo      &use_ctx        &react_fc    &jsx_fragment  &import_react  &export_default  &export_named  &npm_install
&kp TAB     &state_update  &effect_deps  &ref_current  &props_spread  &map_array      &try_catch   &cond_render   &async_await   &destructure     &prop_types    &trans
&kp LSHIFT  &console_log   &debugger     &test_render  &test_expect   &test_mock      &git_commit  &git_push      &git_pull      &json_parse      &json_string   &trans
                                         &trans        &trans         &trans          &trans       &trans
            >;
        };

        SYSTEM {
            bindings = <
&bootloader  &out OUT_USB  &out OUT_BLE  &bt BT_CLR  &zmk_studio   &studio_lock        &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &to 0
&sys_reset   &ext_POWER    &tb_toggle    &tb_speed   &kp C_SLEEP   &kp C_PP            &kp C_PP       &kp C_PREV     &kp C_NEXT    &kp F9        &kp F10       &kp F11
&profile     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &kp C_BRI_DN  &kp C_BRI_UP        &app_switch1   &app_switch2   &app_switch3  &kp F1        &KP_F5        &kp PSCRN
                                         &trans      &trans        &trans              &trans         &trans
            >;
        };

        MOUSE {
            bindings = <
&none    &msc MOVE_LEFT  &msc MOVE_UP    &mmv MOVE_UP    &msc MOVE_DOWN   &msc MOVE_RIGHT    &none  &none            &none      &none         &none          &none
&kp TAB  &mkp MB4        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5           &none  &kp RIGHT_SHIFT  &kp RCTRL  &kp LEFT_ALT  &kp LCMD  &none
&none    &kp C_AC_UNDO   &kp C_AC_CUT    &kp C_AC_COPY   &kp C_AC_PASTE   &mkp MCLK          &none  &none            &none      &none         &none          &none
                                         &trans          &trans           &trans             &kp RETURN              &trans
            >;
        };

        SLOW {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        SCROLL {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        EMPTY {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        EMPTY2 {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };
    };
};
